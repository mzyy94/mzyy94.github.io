---
import {
  getCollection,
  type CollectionEntry,
  type CollectionKey,
} from "astro:content";

type PageData = {
  title: string;
  meta_title?: string;
  description?: string;
  image?: string;
  draft?: boolean;
};

export const getSinglePage = async <C extends CollectionKey>(
  collectionName: C
): Promise<CollectionEntry<C>[]> => {
  const allPages = await getCollection(collectionName);

  const removeIndex = allPages.filter((data) => data.id.match(/^(?!-)/));

  const removeDrafts = removeIndex.filter((data) => {
    const pageData = data.data as PageData;
    return pageData.draft !== true;
  });

  return removeDrafts.map(item => {
    const matched = item.id.match(/^\d{4}\/(\d{4})-(\d{2})-(\d{2})-(.*)$/)
    return {
      ...item,
      id: matched ? matched.slice(1,5).join("/") + "/" : item.id,
    }
  })
};
---
